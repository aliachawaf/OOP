package fr.igpolytech.aliachawaf.Battleship;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class PlayBattleship {

	private static Scanner scanner;

	public static void main(String[] args) {
		
		scanner = new Scanner(System.in);
		
		System.out.println(" 1 : Human VS Human \n 2 : Human VS ArtificialPlayer \n 3 : Artificial VS Artificial\n");
		System.out.print("Enter the number of the game you want to play : ");
		
		int gameType = scanner.nextInt();
		
		/* input mapSize */
		int mapSize = 10;
		boolean checkNotException = false;

		System.out.print("\nEnter the map size you want between 5-25 (ex : enter 10 to have a map 10x10) : ");

		while (!checkNotException) {
			try {
				do {
					mapSize = scanner.nextInt();
					scanner.nextLine();

					if (mapSize < 5 || mapSize > 25) {
						System.out
								.print("\nThe size you've entered is not between 5 and 25 ! Re-enter it : ");
					}

				} while (mapSize < 5 || mapSize > 25);

				checkNotException = true;

			} catch (java.util.InputMismatchException e) {
				System.out
						.print("\nThe size you've entered is not a number ! Re-enter it : ");
				scanner.nextLine();
			} catch (StringIndexOutOfBoundsException e) {
				System.out.print("Map size is missing. Re-enter it :");
				scanner.nextLine();
			}
		}
		
		
		/* set up 5 ships for each player */
		Ship carrier_1 = new Ship("carrier", 5);
		Ship battleship_1 = new Ship("battleship", 4);
		Ship cruiser_1 = new Ship("cruiser", 3);
		Ship submarine_1 = new Ship("submarine", 3);
		Ship destroyer_1 = new Ship("destroyer", 2);

		Ship carrier_2 = new Ship("carrier", 5);
		Ship battleship_2 = new Ship("battleship", 4);
		Ship cruiser_2 = new Ship("cruiser", 3);
		Ship submarine_2 = new Ship("submarine", 3);
		Ship destroyer_2 = new Ship("destroyer", 2);

		/* set up a list of ships for each player */
		List<Ship> player1_ships = new ArrayList<Ship>();
		player1_ships.add(carrier_1);
		player1_ships.add(battleship_1);
		player1_ships.add(cruiser_1);
		player1_ships.add(submarine_1);
		player1_ships.add(destroyer_1);

		List<Ship> player2_ships = new ArrayList<Ship>();
		player2_ships.add(carrier_2);
		player2_ships.add(battleship_2);
		player2_ships.add(cruiser_2);
		player2_ships.add(submarine_2);
		player2_ships.add(destroyer_2);

		
		//System.out.println("Currently, each player has 5 ships : " + player1_ships);
		
		//System.out.println("Do you want to add one more ship (yes/no) ? ");
		
		
		
		Player player1 = null;
		Player player2 = null;
		
		String name;
		int level;
		
		/* set up 2 players according to the game type chosen */
		
		if (gameType == 1){
		
			/* player1 */
			System.out.print("Player 1, enter your name : ");
			name = scanner.nextLine();
			player1 = new HumanPlayer(name, mapSize);
			
			/* player2 */
			System.out.print("Player 2, enter your name : ");
			name = scanner.nextLine();
			player2 = new HumanPlayer(name, mapSize);
			
			
		} else if (gameType == 2){
			
			/* player1 */
			System.out.print("\nEnter your name : ");
			name = scanner.nextLine();
			player1 = new HumanPlayer(name, mapSize);
			
			/* player2 */ 
			System.out.println(" 0 : easy \n 1 : medium \n 2 : hard\n");
			System.out.print("Enter the number of difficulty level you want : ");
			
			level = scanner.nextInt();
			
			if (level==0){
				player2 = new ArtificialPlayer0(2, mapSize);
			} else if (level==1){
				player2 = new ArtificialPlayer1(2, mapSize);
			} else {
				player2 = new ArtificialPlayer2(2, mapSize);
			}
		} //else level2
		
		
		/* set up a game with the 2 players instanced 
		 * (by default, player1 is current player)*/
		Game game = new Game(player1, player2); 

		/* initialization of boards' display */
		player1.getBoardGame().initBoard();
		player1.getBoardAttack().initBoard();
		player2.getBoardGame().initBoard();
		player2.getBoardAttack().initBoard();
		
		/* launch game */
		if (gameType==1){
			HumanVSHuman.main(mapSize, game, player1_ships, player2_ships);
		} else if (gameType==2){
			HumanVSArtificial.main(mapSize, game, player1_ships, player2_ships);
		}
		
		

	}

}
